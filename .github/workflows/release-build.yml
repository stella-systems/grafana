name: Build Release Packages
on:
  workflow_dispatch:
    inputs:
      grafana-branch:
        type: string
        required: true
        description: The branches to use as the Grafana source for the build
  push:
    branches:
      - "km/prerelease-builds-gha"

permissions:
  contents: read

# Builds the following artifacts:
#
# npm:grafana
# storybook
# targz:grafana:linux/amd64
# targz:grafana:linux/arm64
# targz:grafana:linux/arm/v6
# targz:grafana:linux/arm/v7
# deb:grafana:linux/amd64
# deb:grafana:linux/arm64
# deb:grafana:linux/arm/v6
# deb:grafana:linux/arm/v7
# rpm:grafana:linux/amd64:sign
# rpm:grafana:linux/arm64:sign
# docker:grafana:linux/amd64
# docker:grafana:linux/arm64
# docker:grafana:linux/arm/v7
# docker:grafana:linux/amd64:ubuntu
# docker:grafana:linux/arm64:ubuntu
# docker:grafana:linux/arm/v7:ubuntu
# targz:grafana:windows/amd64
# targz:grafana:windows/arm64
# targz:grafana:darwin/amd64
# targz:grafana:darwin/arm64
# zip:grafana:windows/amd64
# msi:grafana:windows/amd64
jobs:
  build:
    runs-on: github-hosted-ubuntu-x64-large
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        # The artifacts in these lists are grouped by their os+arch because the
        # build process can reuse the binaries for each artifact.
        # The downside to this is that the frontend will be built for each one when it could be reused for all of them.
        # This could be a future improvement.
        artifacts:
          # linux/amd64 artifacts
          - targz:grafana:linux/amd64,deb:grafana:linux/amd64,rpm:grafana:linux/amd64,docker:grafana:linux/amd64,docker:grafana:linux/amd64:ubuntu,npm:grafana,storybook
          # linux/arm64 artifacts
          - targz:grafana:linux/arm64,deb:grafana:linux/arm64,rpm:grafana:linux/arm64,docker:grafana:linux/arm64,docker:grafana:linux/arm64:ubuntu
          # linux/arm/v7 artifacts
          - targz:grafana:linux/arm/v7,deb:grafana:linux/arm/v7,docker:grafana:linux/arm/v7,docker:grafana:linux/arm/v7:ubuntu
          # linux/arm/v6 artifacts
          - targz:grafana:linux/arm/v6,deb:grafana:linux/arm/v6
          # windows/amd64 artifacts
          - targz:grafana:windows/amd64,zip:grafana:windows/amd64,msi:grafana:windows/amd64
          # windows/arm64 artifacts
          - targz:grafana:windows/arm64,zip:grafana:windows/arm64
          # darwin/amd64 artifacts
          - targz:grafana:darwin/amd64
          # darwin/arm64 artifacts
          - targz:grafana:darwin/arm64
    steps:
      - uses: actions/checkout@v4
        with:
          repository: grafana/grafana
          persist-credentials: false
      # - run: echo "GRAFANA_VERSION=v${BRANCH#release-}" >> "${GITHUB_ENV}"
      #   env:
      #     BRANCH: ${{ github.ref_name }}
      - run: echo "GRAFANA_VERSION=v0.0.0-${RUN_ID}" >> "${GITHUB_ENV}"
        env:
          RUN_ID: ${{ github.run_id }}
      - uses: ./.github/actions/build-package
        id: build
        with:
          artifacts: ${{ matrix.artifacts }}
          checksum: true
          grafana-path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.GRAFANA_VERSION }}
      - name: Log in to GCS
        id: login-to-gcs
        uses: grafana/shared-workflows/actions/login-to-gcs@login-to-gcs/v0.2.1
      - name: Upload artifacts
        uses: grafana/shared-workflows/actions/push-to-gcs@push-to-gcs-v0.2.0
        with:
          bucket: ${{ steps.login-to-gcs.outputs.bucket }}
          environment: prod
          bucket_path: ${{ env.GRAFANA_VERSION }}
